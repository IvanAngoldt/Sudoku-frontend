import "./allStrategies.css";
import TraintFeld from "../../../сomponents/Trainer/TraintField";

const steps = [
    { type: "text", text: "Скрытая пара (также известная как сопряженная пара) " + 
        "- это набор из двух чисел-кандидатов, расположенных в двух ячейках, " + 
        "которые принадлежат хотя бы к одной общей единице. То есть они находятся в одной строке, столбце или ячейке." },

    { type: "text", text: "Очевидно, что решение будет содержать эти значения в " +
        "этих двух ячейках, а все остальные кандидаты с этими числами могут быть удалены " +
        " из любых общих для них единиц. В этом примере демонстрируется скрытая пара. " },

    { type: "highlightCells", index: [1, 2], text: "" +
        "Оранжевым цветом выделены две ячейки, содержащие 1 и 6. Мы не знаем, в какой именно окажутся 1 и 6 -" +
        " мы узнаем это позже, когда закончим головоломку." },

    { type: "highlightBadNotes", index: [3, 4, 5], number: [1, 6], text: "А это означает, что мы можем удалить все остальные 1 и 6" +
        " в этом ряду" },

    { type: "deleteNotes", index: [3, 4, 5], number: [1, 6], text: "Убираем их из заметок" },

    { type: "highlightCells", index: [1, 2], text: "Также заметим, что эти ячейки в одном квадрате, значит в " +
        " этом квадрате больше 1 и 6 не может быть." },

    { type: "highlightBadNotes", index: [18], number: [1], text: "Значит тут 1 не может быть" },

    { type: "deleteNotes", index: [18], number: [1], text: "Убираем 1" },

    { type: "highlightCells", index: [23, 26], text: "Цифры 6 и 7 в третьем ряду также является скрытой парой." },

    { type: "highlightBadNotes", index: [18, 22], number: [6, 7], text: "Эта пара удаляет сразу три другие кандидатные 6 и 7 в этом ряду." },

    { type: "deleteNotes", index: [18, 22], number: [6, 7], text: "Убираем их" },

    { type: "fill", index: [18], number: [8], text: "Комбинируя обе скрытые пары, мы получаем решенную ячейку с цифрой 8" },

    // { type: "highlightBadNotes", index: [18], number: [1], text: "Также заметим, что эти ячейки в одном квадрате, значит в " +
    //     " этом квадрате больше 1 и 6 не может быть" },

    // { type: "text", text: "Ознакомьтесь с полем, заметите ли вы особенность?" },
    // { type: "highlightCells", index: [1, 2], text: "Обратите внимание на эти ячейки" },
    // { type: "highlightNotes", index: [1, 2], number: [1, 6], text: "Цифры 1 и 6 повторяются" },
    // { type: "highlightBadNotes", index: [3, 4, 5], number: [1, 6], text: "Значит в этих ячейках цифр 1 и 6 не может быть" },
    // { type: "deleteNotes", index: [3, 4, 5], number: [1, 6], text: "Убираем их из заметок" },
    // { type: "text", text: "Теперь только два поля могут иметь цифры 1 и 6" },
];

const initialGrid = [
    ['4', '0', '0', '0', '0', '0', '9', '3', '8'],
    ['0', '3', '2', '0', '9', '4', '1', '0', '0'],
    ['0', '9', '5', '3', '0', '0', '2', '4', '0'],
    ['3', '7', '0', '6', '0', '9', '0', '0', '4'],
    ['5', '2', '9', '0', '0', '1', '6', '7', '3'],
    ['6', '0', '4', '7', '0', '3', '0', '9', '0'],
    ['9', '5', '7', '0', '0', '8', '3', '0', '0'],
    ['0', '0', '3', '9', '0', '0', '4', '0', '0'],
    ['2', '4', '0', '0', '3', '0', '7', '0', '9'],
];

const initialNotes = [
    [], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [1, 7, 8], [], [], [], [1, 6, 7, 8], [6, 7], [], [], [6, 7],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
    [], [], [], [], [], [], [], [], [],
];

const NakedPairs = ({ onStrategyLearned }) => {
    const handleStepComplete = (stepIndex) => {
        if (stepIndex === steps.length - 1) {
            onStrategyLearned?.();
        }
    };

    return (
        <div>
            <h1>Naked Pairs</h1>
            <TraintFeld 
                steps={steps} 
                initialGrid={initialGrid} 
                initialNotes={initialNotes}
                onStepChange={handleStepComplete}
            />
        </div>
    );
};

export default NakedPairs;